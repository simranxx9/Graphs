#include <iostream>
#include<bits/stdc++.h>
using namespace std;

	vector<int> bfsOfGraph(int V, vector<int> adj[])
	{
	    // Code here
	    vector<int> bfs;
	    vector<int> visited(V+1, 0);
	    
	    for(int i =1 ; i<= V ; i++)
	    {
	        
	        if(!visited[i])
	        {
	            queue<int> q;
	            q.push(i);
	            visited[i] = 1;
	            
	            while(!q.empty())
	            {
	                int node = q.front();
	                q.pop();
	                bfs.push_back(node);
	                
	                for(auto it : adj[node])
	                {
	                    if(!visited[it])
	                    {
	                        q.push(it);
	                    visited[it] = 1;
	                    }
	                }
	            }
	        }
	    }
	    return bfs;
	}

int main() {
  int n, m, u, v;
  cin>>n>>m;
  vector<int> adj_list[n+1];
  for(int i = 0 ; i < m ; i ++ )
  {
    cin>>u>>v;
    adj_list[u].push_back(v);
    adj_list[v].push_back(u);
  }
vector<int> res = bfsOfGraph(n, adj_list);

for(int i =0 ;i<res.size();i++)
{
  cout<<res[i]<<"  ";
}
cout<<endl;


}
