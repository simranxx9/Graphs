class Solution
{
    public:
	//Function to detect cycle in a directed graph.
	bool check_cycle(int node,int vis[], int dfs_vis[], vector<int> adj[] )
	{
	    vis[node] = 1;
	    dfs_vis[node] = 1;
	    
	    for(auto it : adj[node])
	    {
	        if(!vis[it])
	        {
	            if(check_cycle(it, vis, dfs_vis, adj)) return true;
	        }
	        else if(dfs_vis[it])   // vis[it] == 1 && dfs_vis[it] ==1
	        {
	            return true;
	        }
	    }
	    dfs_vis[node] = 0;
	    return false;
	}
	
	bool isCyclic(int V, vector<int> adj[]) 
	{
	   	// code here
	   	int vis[V+1] ={0}, dfs_vis[V+1] ={0};
	   
	   	
	   	for(int i = 1; i<= V; i++)
	   	{
	   	    if(!vis[i])
	   	    {
	   	        if(check_cycle(i, vis,dfs_vis, adj))
	   	            return true;
	   	    }
	   	}
	   	return false;
	}
};
