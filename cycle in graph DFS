bool check_cycle(int node, vector<int> &vis, vector<int> adj[], int parent)
    {
        vis[node] = 1;
        for(auto it : adj[node])
        {
            if(!vis[it])
            {
                check_cycle(it, vis, adj, node);
            }
            else if(it != parent)
                return true;
        }
        return false;
    }
    //Function to detect cycle in an undirected graph.
	bool isCycle(int V, vector<int>adj[])
	{
	    // Code here
	    vector<int> vis(V+1, 0);
	    
	    for(int i =1 ;i<= V;i++)
	    {
	        if(!vis[i])
	        {
	            if(check_cycle(i, vis, adj, -1))
	            {
	                return true;
	            }
	        }
	    }
	    return false;
	}
